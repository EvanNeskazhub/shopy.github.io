document.addEventListener("DOMContentLoaded",function(){var t=[].slice.call(document.querySelectorAll("img.lazy")),e=[].slice.call(document.querySelectorAll(".lazy-background")),n=[].slice.call(document.querySelectorAll("[data-bg]"));if("IntersectionObserver"in window){let o=new IntersectionObserver(function(t,e){t.forEach(function(t){if(t.isIntersecting){let e=t.target;e.src=e.dataset.src,e.srcset=e.dataset.srcset,e.classList.remove("lazy"),o.unobserve(e)}})});t.forEach(function(t){o.observe(t)});let r=new IntersectionObserver(function(t,e){t.forEach(function(t){t.isIntersecting&&(t.target.classList.add("visible"),r.unobserve(t.target))})});e.forEach(function(t){r.observe(t)});let a=new IntersectionObserver(function(t,e){t.forEach(function(t){if(t.isIntersecting){let e=t.target;e.style.backgroundImage="url("+e.dataset.bg+")",a.unobserve(e)}})});n.forEach(function(t){a.observe(t)})}else t.forEach(function(t){t.src=t.dataset.src,t.srcset=t.dataset.srcset}),e.forEach(function(t){t.classList.add("visible")}),n.forEach(function(t){t.style.backgroundImage="url("+t.dataset.bg+")"})}),$(document).ready(function(){$("#output1").html($("#range1").val()),$("#formControlRangeMin").mousemove(function(){$("#output1").html($("#formControlRangeMin").val())}),$("#output").change(function(){$("#formControlRangeMin").val($("#output1").html())}),$("#output2").html($("#range2").val()),$("#formControlRangeMax").mousemove(function(){$("#output2").html($("#formControlRangeMax").val())}),$("#output2").change(function(){$("#formControlRangeMax").val($("#output2").html())})});